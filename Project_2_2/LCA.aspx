<%@ Page Language="C#" AutoEventWireup="true" CodeFile="LCA.aspx.cs" Inherits="LCA" %>


<!DOCTYPE html>

<html >
<head runat="server">
    <title>LCA</title>
    <link rel="stylesheet" type="text/css" href="style.css" />
    
</head>
<body>
    <form runat="server">
 	<div class="main">

 		<div class="header">
 			<img src="image/cover.jpg"/>
 		</div>

 		<div class="mainmenu">
            <div class="menubar">
 			<ul>
 				<li><a href="Home.aspx">Home</a></li>
 				<li><a href="About_Me.aspx">About Me</a></li>
 				<li><a href="Programming_content.aspx">Programming Content</a></li>
 				<li><a href="other.aspx">Others</a></li>
 			</ul>
            </div>
             <div class="logout">
                 <ul>
                 <li><a href="Logout.aspx">Logout</a></li>
                 </ul>
             </div>
 		</div>
         <asp:SqlDataSource ID="SqlDataSource1" runat="server" ConnectionString="<%$ ConnectionStrings:BlogConnectionString %>" SelectCommand="SELECT * FROM [commentTable] WHERE ([postID] =@postID)">
             <SelectParameters>
                 <asp:Parameter DefaultValue="lca" Name="postID" Type="String" />
             </SelectParameters>
        </asp:SqlDataSource>
 		<div class="maincontent">
             <div class="content">
 			<div class="posthead" id="lca">
 				<h1>
<a href="LCA.aspx">লোয়েস্ট কমন অ্যানসেস্টর</a>  </h1> </div>
<div class="post">লেখক: শাফায়েত, তারিখ: মার্চ ১৩, ২০১৪

<pre>
    <p>

লোয়েস্ট কমন অ্যানসেস্টর জিনিসটা শুনতে একটু কঠিন মনে হলেও জিনিসটা সহজ আর খুবই কাজের। বেশ কিছু ধরণের 
        
প্রবলেম সলভ করে ফেলা যায় এই অ্যালগোরিদম দিয়ে। আমরা প্রথমে লোয়েস্ট কমন অ্যানসেস্টর বের করার ব্রুটফোর্স 
        
অ্যালগোরিদম দেখবো, তারপর স্পার্স টেবিল নামের নতুন একটা ডাটা স্ট্রাকচার শিখে কমপ্লেক্সিটি লগ এ নামিয়ে আনবো।


প্রথমেই আমরা জেনে নেই লোয়েস্ট কমন অ্যানসেস্টর বা এল.সি.এ(LCA) কি সেটা। নিচের ছবিটা দেখ:


<img src="image/lca/1.jpg"/>


ছবিতে k আর n নোডের প্যারেন্ট ধরে পিছে যেতে থাকলে তারা i নোডে এসে মিলবে। i হলো k,n এর লোয়েস্ট কমন 
        
অ্যানসেস্টর। ‘a’ ও দুইজনের কমন অ্যানসেস্টর কিন্তু i হলো ‘লোয়েস্ট’ বা সবথেকে কাছাকাছি।


মনে করো ট্রি টা দিয়ে বুঝানো হচ্ছে একটা অফিসে কে কার সুপারভাইজর বা বস। a হলো অফিসের হেড, b এবং i 
        
এর বস হলো a, আবার c এবং f এর বস হলো b ইত্যাদি। তাহলে লোয়েস্ট কমন অ্যানসেস্টর অ্যালগোরিদম দিয়ে দুইজন 
        
এমপ্লয়ির লোয়েস্ট/সব থেকে কাছের কমন বস খুজে বের করে ফেলতে পারি সহজেই।


প্রথমে আমরা একদম নেইভ একটা উপায় দেখি যেটা খুব বড় ইনপুটের জন্য কাজ করবেনা। মনে করি আমরা k,n এর 
        
এল.সি.এ বের করতে চাই, প্রথমেই k এর প্যারেন্ট ধরে ধরে উপরে উঠে সবগুলো অ্যানসেস্টরের লিস্ট করে ফেলি:

        
k এর অ্যানসেস্টর:

j       i     a

n এর অ্যানসেস্টর:

m     i     a



দুইটা লিস্টেই বাম থেকে ডানে যেতে থাকলে প্রথম যে দুইটা নোড কমন পাবো সেটাই হবে এল.সি.এ! এই উদাহরণে প্রথমে 
        
কমন পাবো i, তাই সেটাই হবে এল.সি.এ। ‘a’ ও একটা কমন এনসেস্টর কিন্তু সেটা “লোয়েস্ট” না। একটা ভিজিটেড অ্যারে 
        
বা ফ্ল্যাগ ব্যবহার করে খুব সহজেই আমরা এই অ্যালগোরিদম ইমপ্লিমেন্ট করতে পারি। প্রথমে k এর লিস্টে যারা আছে সেগুলোর 
        
ইনডেক্সের ফ্ল্যাগ অন করে দিবো, তারপর n এর লিস্টে লুপ চালিয়ে দেখবো ফ্ল্যাগ অন আছে কোন নোডের।


প্রতিটা লিস্ট বানাতে আমাদের সর্বোচ্চ n টা নোড ভিজিট করা লাগতে পারে, তাই কমপ্লেক্সিটি O(n) ।


O(n) কমপ্লিক্সিটি খারাপ না যদি আমাদের মাত্র এক জোড়া নোডের এল.সি.এ বের করতে হয়। যদি আমাদের m জোড়া নোড দিয়ে 
        
বলে প্রতিটা পেয়ারের এল.সি.এ বের করতে তাহলে কমপ্লেক্সিটি হয়ে যাবে O(m*n) । এটাকে আমরা চাইলে O(m*log(n)) এ সলভ 
        
করতে পারি, অর্থাৎ প্রতি কুয়েরি কাজ করবে O(logn) এ। তবে তার আগে কিছু প্রি-প্রসেসিং করে নিতে হবে।


প্রতিটা নোডের জন্য আমরা সেভ করে রাখবো নোডটার:


প্রথম প্যারেন্ট বা ২^০ তম প্যারেন্ট


২য় প্যারেন্ট বা ২^১ তম প্যারেন্ট


৪র্থ প্যারেন্ট বা ২^২ তম প্যারেন্ট


৮ম প্যারেন্ট বা ২^৩ তম প্যারেন্ট


যদি K-তম প্যারেন্ট বলতে কিছু না থাকে তাহলে আমরা -১ রেখে দিবো। যেমন রুট নোডের প্রথম প্যারেন্ট বলতে কিছু নেই, 
        
তাই প্রথম প্যারেন্ট হবে -১।


<img src="image/lca/2.jpg"/>


তাহলে উপরের ট্রি এর জন্য নিচের মতো একটা ২-ডিমেনশনাল টেবিল তৈরি হবে:<p>

     
        নোড          ২^০ তম প্যারেন্ট          ২^১ তম প্যারেন্ট          ২^২ তম প্যারেন্ট 
     
          ০                   -১                           -১                          -১

          ১                    ০                           -১                          -১ 

          ২                    ০                           -১                          -১

          ৩                    ০                           -১                          -১

          ৪                    ২                            ০                          -১ 

          ৫                    ৪                            ২                          -১

          ৬                    ৫                            ৪                           ০

          ৭                    ৫                            ৪                           ০

          ৮                    ০                           -১                          -১ 



এই টেবিলটাকে বলে স্পার্স টেবিল। এই টেবিলটা তৈরি করে কি লাভ হলো? এখন তুমি কোনো নোডের k তম প্যারেন্ট খুব 
    
সহজেই খুজে বের করতে পারবে। যেমন কারো ২৫ তম প্যারেন্ট দরকার হলে প্রথমে ২৫ এর নিচে ২ এর সবথেকে বড় 
    
পাওয়ার ২^৪=১৬ তম প্যারেন্ট খুজে বের করবে। তারপর ১৬তম প্যারেন্টের (২৫-১৬)=৯তম প্যারেন্ট খুজে বের করবে 
    
একই পদ্ধতিতে! প্রতিটা সংখ্যাকে ২ এর পাওয়ারের যোগফল হিসাবে প্রকাশ করা যায় সেটারই সুবিধা নিচ্ছি আমরা। এভাবে 
    
করে O(logn) কমপ্লেক্সিটিতে আমরা কারো k তম প্যারেন্ট বের করতে পারবো যেটা পরবর্তীতে LCA বের করতে কাজে লাগবে।



এখন কথা হলো উপরের টেবিলটা বানাবো কিভাবে? ২^০ তম প্যারেন্ট বের করা সহজ, ট্রি এর উপর একটা ডেপথ-ফার্স্ট-সার্চ 
    
বা ব্রেথড-ফার্স্ট-সার্চ চালিয়ে একটা অ্যারেতে সেভ করে রাখবো কার প্যারেন্ট কে। মনে করি অ্যারেটা হলো T। তাহলে উপরের ট্রি 
    
এর জন্য পাবো T[০]=-১, T[১]=০,T[৬]=৫ ইত্যাদি।


এবার আমরা কলাম-বাই-কলাম টেবিলটা ভরাট করবো। প্রথমেই প্রথম কলাম ভরাট করবো যেটা আসলে T অ্যারের সমান।


টেবিলটা নাম P হলে প্রথম কলাম ভরাট করবো এভাবে,

    for (i = 0; i < N; i++)
         P[i][0] = T[i];

এখন চিন্তা করে দেখো একটা নোডের ২^৪=১৬ তম প্যারেন্ট হলো নোডটার ২^৩=৮ম প্যারেন্টের ২^৩=৮ম প্যারেন্ট। তাহলে 
    
কোন নোডের 2^j তম প্যারেন্ট হবে নোডটার 2^(j-1) তম প্যারেন্টের 2^(j-1) তম প্যারেন্ট! তাহলে যেকোন নোড i এর জন্য:

P[i][j]=P[P[i][j - 1]][j – 1]     যেখানে P[i][j – 1] হলো j-1 তম প্যারেন্ট।



তাহলে পুরো টেবিলটা ভরাট করে ফেলতে পারি এভাবে:
    <div class="code">
    for (j = 1; (1 << j) < N; j++) 
        for (i = 0; i < N; i++) 
            if (P[i][j - 1] != -1) 
                P[i][j] = P[P[i][j - 1]][j – 1];

        </div>

2^j এর মান যদি N এর ছোট না হয় তাহলে নতুন কোনো প্যারেন্ট পাবার সম্ভাবনা নেই, তাই লুপ চলবে 
    
2^j যতক্ষণ N এর ছোট হবে।


এখন আমরা দুটি নোডের এল.সি.এ বের করবো। আমাদের আরেকটা অতিরিক্ত অ্যারে লাগবে L[] যেখানে থাকবে প্রতিটা 
    
নোডের ডেপথ বা লেভেল। রুট নোডের লেভেল হবে ০।

<img src="image/lca/3.jpg"/>


এখন আমরা হলুদ নোড দুইটার এল.সি.এ বের করতে চাই:


প্রথম কাজ হবে এদেরকে একই লেভেলে নিয়ে আসা। p এর লেভেল থেকে ২ এর পাওয়ার বিয়োগ করতে থাকবো এবং একই 
    
সাথে স্পার্স টেবিল ব্যবহার করে উপরে উঠাতে থাকবো যতক্ষণনা q এর লেভেলের সমান হয়।


        <img src="image/lca/4.jpg"/>


    <div class="code">
      for (i = log; i >= 0; i--)
          if (L[p] - (1 << i) >= L[q]) //2^i তম প্যারেন্টে যাও
              p = P[p][i];
        </div>

এখন দুইজন সমান লেভেলে আসলো। এবার কাজ হবে দুইটা নোডকেও টেনে একসাথে উপরে উঠানো যতক্ষনা নোড 
    
দুটির প্যারেন্ট একসাথে এসে মিলে:


        <img src="image/lca/5.jpg"/>


    কোডটা হবে এরকম:
    <div class="code">
      for (i = log; i >= 0; i--)
          if (P[p][i] != -1 && P[p][i] != P[q][i])
              p = P[p][i], q = P[q][i];
        </div>

আমরা এমন জায়গায় p,q কে আনছি যেখানে তাদের দুইজনেরই প্যারেন্ট একই। তাহলে এখন p বা q এর প্যারেন্টই 
    
হবে এল.সি.এ।

        <img src="image/lca/6.jpg"/>


আমরা যদি লুপের মধ্যেই ২ আর ৮ নাম্বার নোডকে p,q তে না এনে ডিরেক্ট ১ নম্বর নোডে আনার চেষ্টা করতাম তাহলে 
    
কি ঘটতে পারতো? P[p][i] != P[q][i] এই শর্তটা না থাকলে কি হত? এটা চিন্তা করা তোমার কাজ ।



কমপ্লেক্সিটি:

স্পার্স টেবিলে রো থাকবে n টা, প্রতিটা রো তে logn টা কলাম থাকবে, প্রি-প্রোসেসিং কমপ্লেক্সিটি O(nlogn)।

প্রতি কুয়েরিতে কমপ্লেক্সিটি O(logn)



রিলেটেড প্রবলেম:

১. একটা ওয়েটেড ট্রি দেয়া আছে। দুটি নোড দিয়ে বলা হলো তাদের মধ্যের দূরত্ব বের করতে হবে। <a href="http://www.spoj.com/problems/QTREE2/"> (Spoj QTree)</a>

২. একটা ওয়েটেড ট্রি দেয়া আছে। দুটি নোড দিয়ে বলা হলো তাদের মধ্যকার পাথের সর্বোচ্চ ওয়েটের এজ এর মান 
    
বলতে হবে। <a href="http://lightoj.com/volume_showproblem.php?problem=1101"> (LOJ A Secret Mission)</a>


সলিউশন ১: শুরুতে ডিএফস চালিয়ে রুট থেকে প্রতিটা নোডের দূরত্ব সেভ করে রাখো। এখন নোড দুইটা a,b এবং তাদের 
    
কমন অ্যানসেস্টর L হলে সলিউশন হবে dist(root,a)+dist(root,b)-2*dist(root,L)।


সলিউশন ২: স্পার্স টেবিলে অতিরিক্ত একটা ইনফরমেশন রাখতে হবে।  প্রতিটা নোড থেকে 2^0, 2^1, 2^2 ইত্যাদি তম 
    
প্যারেন্টের জন্য, প্যারেন্ট থেকে ওই নোডের মধ্যকার পাথের সর্বোচ্চ ওয়েটের এজের মান সেভ করে রাখতে হবে। 
    
বিস্তারিত লিখলাম, এটা সলভ করা তোমার কাজ।







                             
                            <div class="comment">
Comment
                                <div class="commentbox">
<asp:TextBox ID="textArea" TextMode="MultiLine" style="width:55%; height: 143px;" runat="server"></asp:TextBox>    </div></div>     
                                                                      <asp:Button ID="Button1" runat="server" Text="Comment" Width="86px" OnClick="Button1_Click1"></asp:Button>
                             
               </p>
         </pre>


     <asp:Repeater ID="Repeater1" runat="server" DataSourceID="SqlDataSource1">

        <ItemTemplate>
            <div class="usercomment">
                <div class="commentuser">
       <asp:Label runat="server" ID="LabeUserName" Text='<%#Eval("UserName") %>' ></asp:Label>
                </div>

                <div class="commentcomment">
                  <asp:Label runat="server" ID="LabelComment" Text='<%#Eval("comment") %>'></asp:Label>
                </div>
            </div>
        </ItemTemplate>
     </asp:Repeater>
           </div>
             </div>

 			<div class="sidebar">
                 
 				<pre>
                    <p>
                        <ul>
 কিছু কথা            
                
                         
<li><a href="https://saadbashar.wordpress.com/2014/08/19/%E0%A6%95%E0%A6%AE%E0%A7%8D%E0%A6%AA%E0%A6%BF%E0%A6%89%E0%A6%9F%E0%A6%BE%E0%A6%B0-%E0%A6%AC%E0%A6%BF%E0%A6%9C%E0%A7%8D%E0%A6%9E%E0%A6%BE%E0%A6%A8/">কম্পিউটার বিজ্ঞান কি??</a></li> 
<li><a href="http://blog.subeen.com/%E0%A6%B8%E0%A6%BF%E0%A6%8F%E0%A6%B8%E0%A6%87-%E0%A6%AC%E0%A6%BF%E0%A6%AD%E0%A6%BE%E0%A6%97%E0%A7%87%E0%A6%B0-%E0%A6%95%E0%A7%8D%E0%A6%B2%E0%A6%BE%E0%A6%B8-%E0%A6%B6%E0%A7%81%E0%A6%B0%E0%A7%81/">সিএসই বিভাগের ক্লাস শুরুর আগে</a></li>
<li><a href="https://saadbashar.wordpress.com/2014/08/19/%E0%A6%95%E0%A7%87%E0%A6%A8-%E0%A6%86%E0%A6%AE%E0%A6%BF-%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A7%8B%E0%A6%97%E0%A7%8D%E0%A6%B0%E0%A6%BE%E0%A6%AE%E0%A6%BF%E0%A6%82-%E0%A6%B6%E0%A6%BF%E0%A6%96%E0%A6%AC/">কেন আমি প্রোগ্রামিং শিখবো?</a></li>
<li><a href="http://blog.subeen.com/%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A7%8B%E0%A6%97%E0%A7%8D%E0%A6%B0%E0%A6%BE%E0%A6%AE%E0%A6%BF%E0%A6%82-%E0%A6%95%E0%A6%A8%E0%A6%9F%E0%A7%87%E0%A6%B8%E0%A7%8D%E0%A6%9F/">প্রোগ্রামিং কনটেস্ট কি?</a></li> 
<li><a href="http://www.progkriya.org/feature/mirzayanov.html">কেন প্রোগ্রামিং কন্টেস্ট করব? </a></li>
<li><a href="http://www.shafaetsplanet.com/planetcoding/?p=1400">প্রোগ্রামিং কনটেস্ট এবং অনলাইন 
 জাজে হাতেখড়ি </a></li>
<li><a href="http://blog.subeen.com/category/%E0%A6%B8%E0%A6%BE%E0%A6%95%E0%A7%8D%E0%A6%B7%E0%A6%BE%E0%A7%8E%E0%A6%95%E0%A6%BE%E0%A6%B0/">কিছু সাক্ষাৎকার by <a href="https://www.facebook.com/tamim.shahriar.subeen?fref=nf">সুবিন স্যার </a></a></li>

                 

কন্টেস্ট প্রোগ্রামিং সংক্রান্ত যে কোন 
                            
PDF বা CPP ফাইল আপলোড করতে 

চাইলে <a href="file.aspx"> এখানে</a> ক্লিক করুন                           
                            
                            
                   
                                                    
আমার লেখা বিভিন্ন অ্যালগোরিদম 
                        
                        
<li><a href="Segment_Tree_1.aspx">সেগমেন্ট ট্রি-১</a></li>     
                            
<li><a href="Segment_Tree_2.aspx">সেগমেন্ট ট্রি-২ (লেজি প্রপাগেশন)</a></li>       
                            
<li><a href="LCA.aspx">লোয়েস্ট কমন অ্যানসেস্টর</a></li>

<li><a href="BIT.aspx">বাইনারি ইনডেক্সড ট্রি</a></li>
                        
                        </ul>  
                        </p>
                </pre>
 			</div>
 		</div>

 		<div class="footer">
             <center>
                  <p>&copy Tanmoy Ghosh</p>
             </center>
 		</div>
 	</div>
 </body>
    </form>
    </html>
